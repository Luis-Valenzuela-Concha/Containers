version: '3.8'

services:
  db:
    image: postgres
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    networks:
      - mynet
    ports:
      - "5432:5432"

  #pgadmin:
  #  image: dpage/pgadmin4
  #  environment:
  #    PGADMIN_DEFAULT_EMAIL: admin@example.com
  #    PGADMIN_DEFAULT_PASSWORD: admin
  #  ports:
  #    - "8080:80"
  #  networks:
  #    - mynet
  
  rest_server:
    build: .
    command: python -u ./server/rest_server.py
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      - mynet

  rest_client:
    build: .
    command: python -u ./client/rest_client.py
    depends_on:
      - rest_server
    networks:
      - mynet

  websocket_server:
    build: .
    command: python -u ./server/websocket_server.py
    ports:
      - "7890:7890"
    depends_on:
      - db
    networks:
      - mynet

  websocket_client:
    build: .
    command: python -u ./client/websocket_client.py
    depends_on:
      - websocket_server
    networks:
      - mynet

  python_client:
    build: '.'
    container_name: python_client
    depends_on:
      - rest_server
    command: tail -f /dev/null  # Mantiene el contenedor ejecut√°ndose sin terminar
    networks:
      - mynet
    tty: true  # Habilita un terminal interactivo
    stdin_open: true  # Mantiene stdin abierto

volumes:
  db_data:

networks:
  mynet:
