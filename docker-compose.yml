version: '3.8'

services:
  db:
    image: postgres
    volumes:
      - ./database:/docker-entrypoint-initdb.d
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - mynet
      
  # pgadmin:
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - "8080:80"
  #   networks:
  #     - mynet

  rest_server:
    build: './server/REST'
    container_name: rest_server
    depends_on:
      - db
    networks:
      - mynet

  rest_client:
    build: './client/REST'
    container_name: rest_client
    depends_on:
      - rest_server
    networks:
      - mynet

  websocket_server:
    build: './server/WS'
    container_name: websocket_server
    depends_on:
      - db
    networks:
      - mynet

  websocket_client:
    build: './client/WS'
    container_name: websocket_client
    depends_on:
      - websocket_server
    networks:
      - mynet
  
  python_client:
    build: '.'
    container_name: python_client
    depends_on:
      - rest_server
    command: tail -f /dev/null  # Mantiene el contenedor ejecut√°ndose sin terminar
    networks:
      - mynet
    tty: true  # Habilita un terminal interactivo
    stdin_open: true  # Mantiene stdin abierto

volumes:
  db_data:

networks:
  mynet:
    driver: bridge
